#BlueJ class context
comment0.target=BST
comment0.text=\r\n\ This\ class\ is\ used\ to\ represent\ a\ Binary\ Search\ Tree.\ It\ inherits\ the\ \r\n\ Binary\ Tree\ class\ and\ overrides\ some\ of\ its\ methods.\ \r\n\r\n\ @author\ Caroline\ Lamb,\ with\ assistance\ from\ Madeline\ Schroeder\ and\ Pam\ Cutter\r\n\ @version\ 11/20/2021\r\n
comment1.params=
comment1.target=BST()
comment1.text=\r\n\ Constructs\ a\ Binary\ Search\ Tree\ with\ methods\ inherited\ from\ the\ \r\n\ BinaryTree\ class.\r\n
comment2.params=value
comment2.target=boolean\ add(java.lang.Object)
comment2.text=\ Adds\ elements\ to\ a\ BST.\ Sorts\ the\ elements\ as\ they\ are\ added\ to\ the\ \r\n\ tree\ with\ items\ less\ than\ the\ node\ value\ on\ the\ left\ and\ items\ larget\ \r\n\ than\ the\ node\ value\ on\ the\ right.\ \r\n\ \ \ \ @param\ value\ the\ value\ to\ be\ added\ to\ the\ tree.\r\n\ \ \ \ @return\ true\ when\ the\ value\ has\ been\ added;\ should\ never\ return\ false\r\n
comment3.params=
comment3.target=java.lang.Object\ removeLeftMost()
comment3.text=\ Removes\ left\ most\ node\ in\ the\ tree\ and\ replaces\ that\ node\ with\ the\ \r\n\ root\ of\ the\ right\ tree.\r\n\ \ \ \ @return\ \ \ \ the\ left\ most\ node\ in\ the\ tree.\r\n
comment4.params=value
comment4.target=boolean\ remove(java.lang.Object)
comment4.text=\ Removes\ the\ object\ specified\ by\ the\ parameter\ from\ the\ tree.\ If\ the\ \r\n\ right\ subtree\ of\ that\ value\ is\ not\ empty,\ its\ smallest\ value\ will\ \r\n\ replace\ the\ value\ that\ was\ removed.\ Otherwise\ it\ will\ become\ an\ empty\r\n\ tree.\ \r\n\ \ \ \ @param\ \ the\ value\ to\ be\ removed\ from\ the\ tree\r\n\ \ \ \ @return\ true\ if\ the\ value\ was\ in\ the\ tree\ and\ was\ removed,\ otherwise\ false.\r\n
comment5.params=value
comment5.target=boolean\ equals(java.lang.Object)
comment5.text=\ Checks\ whether\ two\ BST\ are\ the\ same\ tree.\ \r\n\ \ \ \ @param\ \ \ \ the\ tree\ that\ you\ want\ to\ compare.\r\n\ \ \ \ @return\ \ \ true\ if\ the\ trees\ are\ equal,\ false\ if\ they\ are\ not.\ \r\n
comment6.params=
comment6.target=int\ hashCode()
comment6.text=\r\n\ \r\n
comment7.params=item
comment7.target=boolean\ contains(java.lang.Object)
comment7.text=\ Searches\ for\ a\ specific\ item\ in\ the\ tree.\ \r\n\ \ \ \ @param\ \ \ \ \ \ the\ item\ to\ search\ for\r\n\ \ \ \ @return\ \ \ \ \ true\ if\ it\ contains\ the\ item,\ otherwise\ false.\ \r\n
comment8.params=item
comment8.target=int\ numOccurances(java.lang.Object)
comment8.text=\ Calculates\ the\ number\ of\ times\ an\ item\ occurs\ in\ the\ tree.\ \r\n\ \ \ \ @param\ \ the\ item\ to\ search\ for\r\n\ \ \ \ @return\ the\ number\ of\ times\ the\ item\ occurs\r\n
numComments=9
